#include "RobotConfig.h"

std::string SAVE_FILE_NAME = "RobotConfig.txt";

#define DEFINE_GLOBAL_VARIABLE(type, name, defaultValue) \
    type name = defaultValue; \
    void load##name(const std::string& value) { name = convertValue<type>(value); } \
    std::string save##name() { return convertValueToString(name); }

template<typename T>
std::string convertValueToString(const T& value)
{
    std::ostringstream oss;
    oss << value;
    return oss.str();
}

template<typename T>
T convertValue(const std::string& value)
{
    std::istringstream iss(value);
    T convertedValue;
    iss >> convertedValue;
    return convertedValue;
}

DEFINE_GLOBAL_VARIABLE(int, TURN_THRESH_1_DEG_ORBIT, 80)
DEFINE_GLOBAL_VARIABLE(int, TURN_THRESH_2_DEG_ORBIT, 10)
DEFINE_GLOBAL_VARIABLE(int, MAX_TURN_POWER_PERCENT_ORBIT, 100)
DEFINE_GLOBAL_VARIABLE(int, MIN_TURN_POWER_PERCENT_ORBIT, 10)
DEFINE_GLOBAL_VARIABLE(int, TURN_THRESH_1_DEG_KILL, 80)
DEFINE_GLOBAL_VARIABLE(int, TURN_THRESH_2_DEG_KILL, 10)
DEFINE_GLOBAL_VARIABLE(int, MAX_TURN_POWER_PERCENT_KILL, 100)
DEFINE_GLOBAL_VARIABLE(int, MIN_TURN_POWER_PERCENT_KILL, 10)
DEFINE_GLOBAL_VARIABLE(bool, INVERT_TURN, false)
DEFINE_GLOBAL_VARIABLE(bool, INVERT_MOVEMENT, false)
DEFINE_GLOBAL_VARIABLE(int, SCALE_DOWN_MOVEMENT_PERCENT_ORBIT, 100)
DEFINE_GLOBAL_VARIABLE(int, SCALE_DOWN_MOVEMENT_PERCENT_KILL, 100)
DEFINE_GLOBAL_VARIABLE(int, ORBIT_ANGLE_EXTRAPOLATE_MS, 150)
DEFINE_GLOBAL_VARIABLE(int, ORBIT_KD_PERCENT, 15)
DEFINE_GLOBAL_VARIABLE(int, KILL_KD_PERCENT, 15)
DEFINE_GLOBAL_VARIABLE(int, POSITION_EXTRAPOLATE_MS, 150)
DEFINE_GLOBAL_VARIABLE(int, OPPONENT_POSITION_EXTRAPOLATE_MS, 150)
DEFINE_GLOBAL_VARIABLE(int, OPPONENT_POSITION_EXTRAPOLATE_MS_KILL, 150)
DEFINE_GLOBAL_VARIABLE(int, MAX_OPP_EXTRAP_MS_KILL, 1000)
DEFINE_GLOBAL_VARIABLE(float, KD_FILTER_TIME_CONSTANT, 0.03)
DEFINE_GLOBAL_VARIABLE(int, ORBIT_RADIUS, 100)
DEFINE_GLOBAL_VARIABLE(float, ORBIT_PRESERVE_CURR_ANGLE_WEIGHT, 1.0)
DEFINE_GLOBAL_VARIABLE(int, PURE_PURSUIT_RADIUS, 40)
DEFINE_GLOBAL_VARIABLE(float, PP_RADIUS_VEL_SCALE, 1.0)
DEFINE_GLOBAL_VARIABLE(float, PP_MOVAVG_TIME, 5)
DEFINE_GLOBAL_VARIABLE(int, MASTER_MOVE_SCALE_PERCENT, 100)
DEFINE_GLOBAL_VARIABLE(int, MASTER_TURN_SCALE_PERCENT, 100)
DEFINE_GLOBAL_VARIABLE(int, preprocess_tl_x, 0)
DEFINE_GLOBAL_VARIABLE(int, preprocess_tl_y, 0)
DEFINE_GLOBAL_VARIABLE(int, preprocess_tr_x, WIDTH)
DEFINE_GLOBAL_VARIABLE(int, preprocess_tr_y, 0)
DEFINE_GLOBAL_VARIABLE(int, preprocess_bl_x, 0)
DEFINE_GLOBAL_VARIABLE(int, preprocess_bl_y, HEIGHT * 0.6667)
DEFINE_GLOBAL_VARIABLE(int, preprocess_br_x, WIDTH)
DEFINE_GLOBAL_VARIABLE(int, preprocess_br_y, HEIGHT * 0.6667)
DEFINE_GLOBAL_VARIABLE(int, MIN_INTER_SEND_TIME_MS, 4)
DEFINE_GLOBAL_VARIABLE(int, MIN_ROBOT_BLOB_SIZE, WIDTH * 0.04)
DEFINE_GLOBAL_VARIABLE(int, MAX_ROBOT_BLOB_SIZE, WIDTH * 0.08)
DEFINE_GLOBAL_VARIABLE(int, BLOB_MATCHING_DIST_THRESHOLD, 100)
DEFINE_GLOBAL_VARIABLE(int, MIN_OPPONENT_BLOB_SIZE, WIDTH * 0.04)
DEFINE_GLOBAL_VARIABLE(int, MAX_OPPONENT_BLOB_SIZE, WIDTH * 0.04)
DEFINE_GLOBAL_VARIABLE(int, MOTION_LOW_THRESHOLD, 14)
DEFINE_GLOBAL_VARIABLE(float, BLOBS_MIN_FPS, 4.0f)
DEFINE_GLOBAL_VARIABLE(bool, ROTATION_NET_ENABLED, true)
DEFINE_GLOBAL_VARIABLE(bool, GYRO_ENABLED, true)
DEFINE_GLOBAL_VARIABLE(int, HEU_BACKGROUND_AVGING, 90)
DEFINE_GLOBAL_VARIABLE(int, HEU_UNTRACKED_MOVING_BLOB_AVGING, 200)
DEFINE_GLOBAL_VARIABLE(int, HEU_FOREGROUND_THRESHOLD, 20)
DEFINE_GLOBAL_VARIABLE(int, HEU_FOREGROUND_THRESHOLD_INIT, 20)
DEFINE_GLOBAL_VARIABLE(int, HEU_FOREGROUND_MINSIZE, 30)
DEFINE_GLOBAL_VARIABLE(int, HEU_FOREGROUND_BLURSIZE, 15)
DEFINE_GLOBAL_VARIABLE(int, HEU_BACKGROUND_BLURSIZE, 15)
DEFINE_GLOBAL_VARIABLE(int, HEU_BACKGROUND_BLURSIZE_INIT, 15)
DEFINE_GLOBAL_VARIABLE(int, HEU_BLUR_COUNT, 1)
DEFINE_GLOBAL_VARIABLE(int, HEU_BLUR_COUNT_INIT, 1)
DEFINE_GLOBAL_VARIABLE(bool, HEU_HEAL_BG_INIT, true)
DEFINE_GLOBAL_VARIABLE(float, HEU_BRIGHTNESS_CORR, 1.0)
DEFINE_GLOBAL_VARIABLE(int, HEU_FOREGROUND_BUFFER, 5)
DEFINE_GLOBAL_VARIABLE(int, HEU_POSITION_TO_CENTER_SPEED, 40)
DEFINE_GLOBAL_VARIABLE(int, HEU_VELOCITY_AVERAGING, 20)
DEFINE_GLOBAL_VARIABLE(int, HEU_FOREGROUND_RATIO, 10)
DEFINE_GLOBAL_VARIABLE(int, HEU_ROBOT_PROCESSORS, 8)
DEFINE_GLOBAL_VARIABLE(float, MAX_FRONT_WEAPON_SPEED, 0)
DEFINE_GLOBAL_VARIABLE(float, MAX_BACK_WEAPON_SPEED, 0)
DEFINE_GLOBAL_VARIABLE(float, SELF_RIGHTER_IDLE_CURRENT, 0)
DEFINE_GLOBAL_VARIABLE(int, RADIO_CHANNEL, 27)
DEFINE_GLOBAL_VARIABLE(int, SECONDARY_RADIO_CHANNEL, 60)
DEFINE_GLOBAL_VARIABLE(bool, AUTO_SWITCH_CHANNEL, true)
DEFINE_GLOBAL_VARIABLE(bool, FUSE_IMU, true)
DEFINE_GLOBAL_VARIABLE(int, MAX_AVERAGE_DELAY_MS, 100)
DEFINE_GLOBAL_VARIABLE(int, SWITCH_COOLDOWN_MS, 500)
DEFINE_GLOBAL_VARIABLE(int, GO_AROUND_RADIUS, 30)
DEFINE_GLOBAL_VARIABLE(float, OPPONENT_WEAPON_OFFSET, 50)
DEFINE_GLOBAL_VARIABLE(float, OPPONENT_SPIRAL_START_DEG, 65)
DEFINE_GLOBAL_VARIABLE(float, OPPONENT_SPIRAL_END_DEG, 170)
DEFINE_GLOBAL_VARIABLE(bool, LEAD_WITH_BAR, true)
DEFINE_GLOBAL_VARIABLE(float, FISHEYE_SCALE, 8)
DEFINE_GLOBAL_VARIABLE(float, FISHEYE_FL, 80)
DEFINE_GLOBAL_VARIABLE(float, FISHEYE_Y, 0.5)
DEFINE_GLOBAL_VARIABLE(bool, FISHEYE_ENABLE, false)
DEFINE_GLOBAL_VARIABLE(bool, WASD_ENABLED, false)
DEFINE_GLOBAL_VARIABLE(bool, ODO_BLOB_ENABLED, true)
DEFINE_GLOBAL_VARIABLE(bool, ODO_HEUR_ENABLED, true)
DEFINE_GLOBAL_VARIABLE(bool, ODO_IMU_ENABLED, true)
DEFINE_GLOBAL_VARIABLE(float, HEU_LEFTSTART_X, 100)
DEFINE_GLOBAL_VARIABLE(float, HEU_LEFTSTART_Y, 350)
DEFINE_GLOBAL_VARIABLE(float, HEU_RIGHTSTART_X, 600)
DEFINE_GLOBAL_VARIABLE(float, HEU_RIGHTSTART_Y, 350)
DEFINE_GLOBAL_VARIABLE(float, NN_MIN_CONFIDENCE, 0.3)
DEFINE_GLOBAL_VARIABLE(float, ANGLE_FUSE_CONF_THRESH, 0.3)
DEFINE_GLOBAL_VARIABLE(float, ANGLE_FUSE_SPEED, 1.0)
DEFINE_GLOBAL_VARIABLE(float, CAMERA_GAIN, 20.8)
DEFINE_GLOBAL_VARIABLE(std::string, IMAGE_REF_INTENSITY, "./backgrounds/refBackground.jpg")
DEFINE_GLOBAL_VARIABLE(std::string, IMAGE_START_BACKGROUND, "./backgrounds/startBackground.jpg")
DEFINE_GLOBAL_VARIABLE(float, IMAGE_INTENSITY_TIME_CONSTANT, 1.0)
DEFINE_GLOBAL_VARIABLE(int, IMAGE_INTENSITY_SQR_size, 10)
DEFINE_GLOBAL_VARIABLE(int, IMAGE_INTENSITY_SQR_1_x, 200)
DEFINE_GLOBAL_VARIABLE(int, IMAGE_INTENSITY_SQR_1_y, 10)
DEFINE_GLOBAL_VARIABLE(int, IMAGE_INTENSITY_SQR_2_x, 500)
DEFINE_GLOBAL_VARIABLE(int, IMAGE_INTENSITY_SQR_2_y, 10)
DEFINE_GLOBAL_VARIABLE(int, IMAGE_INTENSITY_SQR_3_x, 10)
DEFINE_GLOBAL_VARIABLE(int, IMAGE_INTENSITY_SQR_3_y, 500)
DEFINE_GLOBAL_VARIABLE(int, IMAGE_INTENSITY_SQR_4_x, 710)
DEFINE_GLOBAL_VARIABLE(int, IMAGE_INTENSITY_SQR_4_y, 500)

DEFINE_GLOBAL_VARIABLE(int, STARTING_LEFT_TL_x, 0)
DEFINE_GLOBAL_VARIABLE(int, STARTING_LEFT_TL_y, 200)
DEFINE_GLOBAL_VARIABLE(int, STARTING_LEFT_BR_x, 100)
DEFINE_GLOBAL_VARIABLE(int, STARTING_LEFT_BR_y, 400)
DEFINE_GLOBAL_VARIABLE(int, STARTING_RIGHT_TL_x, 500)
DEFINE_GLOBAL_VARIABLE(int, STARTING_RIGHT_TL_y, 200)
DEFINE_GLOBAL_VARIABLE(int, STARTING_RIGHT_BR_x, 720)
DEFINE_GLOBAL_VARIABLE(int, STARTING_RIGHT_BR_y, 400)



GlobalVariable globalVariables[] = {
    DECLARE_GLOBAL_VARIABLE(TURN_THRESH_1_DEG_ORBIT),
    DECLARE_GLOBAL_VARIABLE(TURN_THRESH_2_DEG_ORBIT),
    DECLARE_GLOBAL_VARIABLE(MAX_TURN_POWER_PERCENT_ORBIT),
    DECLARE_GLOBAL_VARIABLE(MIN_TURN_POWER_PERCENT_ORBIT),
    DECLARE_GLOBAL_VARIABLE(TURN_THRESH_1_DEG_KILL),
    DECLARE_GLOBAL_VARIABLE(TURN_THRESH_2_DEG_KILL),
    DECLARE_GLOBAL_VARIABLE(MAX_TURN_POWER_PERCENT_KILL),
    DECLARE_GLOBAL_VARIABLE(MIN_TURN_POWER_PERCENT_KILL),
    DECLARE_GLOBAL_VARIABLE(INVERT_TURN),
    DECLARE_GLOBAL_VARIABLE(INVERT_MOVEMENT),
    DECLARE_GLOBAL_VARIABLE(SCALE_DOWN_MOVEMENT_PERCENT_ORBIT),
    DECLARE_GLOBAL_VARIABLE(SCALE_DOWN_MOVEMENT_PERCENT_KILL),
    DECLARE_GLOBAL_VARIABLE(ORBIT_ANGLE_EXTRAPOLATE_MS),
    DECLARE_GLOBAL_VARIABLE(ORBIT_KD_PERCENT),
    DECLARE_GLOBAL_VARIABLE(KILL_KD_PERCENT),
    DECLARE_GLOBAL_VARIABLE(POSITION_EXTRAPOLATE_MS),
    DECLARE_GLOBAL_VARIABLE(OPPONENT_POSITION_EXTRAPOLATE_MS),
    DECLARE_GLOBAL_VARIABLE(OPPONENT_POSITION_EXTRAPOLATE_MS_KILL),
    DECLARE_GLOBAL_VARIABLE(MAX_OPP_EXTRAP_MS_KILL),
    DECLARE_GLOBAL_VARIABLE(KD_FILTER_TIME_CONSTANT),
    DECLARE_GLOBAL_VARIABLE(ORBIT_RADIUS),
    DECLARE_GLOBAL_VARIABLE(ORBIT_PRESERVE_CURR_ANGLE_WEIGHT),
    DECLARE_GLOBAL_VARIABLE(PURE_PURSUIT_RADIUS),
    DECLARE_GLOBAL_VARIABLE(PP_RADIUS_VEL_SCALE),
    DECLARE_GLOBAL_VARIABLE(PP_MOVAVG_TIME),
    DECLARE_GLOBAL_VARIABLE(MASTER_MOVE_SCALE_PERCENT),
    DECLARE_GLOBAL_VARIABLE(MASTER_TURN_SCALE_PERCENT),
    DECLARE_GLOBAL_VARIABLE(MAX_FRONT_WEAPON_SPEED),
    DECLARE_GLOBAL_VARIABLE(MAX_BACK_WEAPON_SPEED),
    DECLARE_GLOBAL_VARIABLE(SELF_RIGHTER_IDLE_CURRENT),
    DECLARE_GLOBAL_VARIABLE(preprocess_tl_x),
    DECLARE_GLOBAL_VARIABLE(preprocess_tl_y),
    DECLARE_GLOBAL_VARIABLE(preprocess_tr_x),
    DECLARE_GLOBAL_VARIABLE(preprocess_tr_y),
    DECLARE_GLOBAL_VARIABLE(preprocess_bl_x),
    DECLARE_GLOBAL_VARIABLE(preprocess_bl_y),
    DECLARE_GLOBAL_VARIABLE(preprocess_br_x),
    DECLARE_GLOBAL_VARIABLE(preprocess_br_y),
    DECLARE_GLOBAL_VARIABLE(MIN_INTER_SEND_TIME_MS),
    DECLARE_GLOBAL_VARIABLE(MIN_ROBOT_BLOB_SIZE),
    DECLARE_GLOBAL_VARIABLE(MAX_ROBOT_BLOB_SIZE),
    DECLARE_GLOBAL_VARIABLE(BLOB_MATCHING_DIST_THRESHOLD),
    DECLARE_GLOBAL_VARIABLE(MIN_OPPONENT_BLOB_SIZE),
    DECLARE_GLOBAL_VARIABLE(MAX_OPPONENT_BLOB_SIZE),
    DECLARE_GLOBAL_VARIABLE(MOTION_LOW_THRESHOLD),
    DECLARE_GLOBAL_VARIABLE(BLOBS_MIN_FPS),
    DECLARE_GLOBAL_VARIABLE(ROTATION_NET_ENABLED),
    DECLARE_GLOBAL_VARIABLE(GYRO_ENABLED),
    DECLARE_GLOBAL_VARIABLE(HEU_BACKGROUND_AVGING),
    DECLARE_GLOBAL_VARIABLE(HEU_UNTRACKED_MOVING_BLOB_AVGING),
    DECLARE_GLOBAL_VARIABLE(HEU_FOREGROUND_THRESHOLD),
    DECLARE_GLOBAL_VARIABLE(HEU_FOREGROUND_THRESHOLD_INIT),
    DECLARE_GLOBAL_VARIABLE(HEU_FOREGROUND_MINSIZE),
    DECLARE_GLOBAL_VARIABLE(HEU_FOREGROUND_BLURSIZE),
    DECLARE_GLOBAL_VARIABLE(HEU_BACKGROUND_BLURSIZE),
    DECLARE_GLOBAL_VARIABLE(HEU_BACKGROUND_BLURSIZE_INIT),
    DECLARE_GLOBAL_VARIABLE(HEU_FOREGROUND_BUFFER),
    DECLARE_GLOBAL_VARIABLE(HEU_BLUR_COUNT),
    DECLARE_GLOBAL_VARIABLE(HEU_HEAL_BG_INIT),
    DECLARE_GLOBAL_VARIABLE(HEU_BLUR_COUNT_INIT),
    DECLARE_GLOBAL_VARIABLE(HEU_BRIGHTNESS_CORR),
    DECLARE_GLOBAL_VARIABLE(HEU_POSITION_TO_CENTER_SPEED),
    DECLARE_GLOBAL_VARIABLE(HEU_VELOCITY_AVERAGING),
    DECLARE_GLOBAL_VARIABLE(HEU_FOREGROUND_RATIO),
    DECLARE_GLOBAL_VARIABLE(HEU_ROBOT_PROCESSORS),
    DECLARE_GLOBAL_VARIABLE(RADIO_CHANNEL),
    DECLARE_GLOBAL_VARIABLE(SECONDARY_RADIO_CHANNEL),
    DECLARE_GLOBAL_VARIABLE(AUTO_SWITCH_CHANNEL),
    DECLARE_GLOBAL_VARIABLE(MAX_AVERAGE_DELAY_MS),
    DECLARE_GLOBAL_VARIABLE(SWITCH_COOLDOWN_MS),
    DECLARE_GLOBAL_VARIABLE(GO_AROUND_RADIUS),
    DECLARE_GLOBAL_VARIABLE(OPPONENT_WEAPON_OFFSET),
    DECLARE_GLOBAL_VARIABLE(OPPONENT_SPIRAL_START_DEG),
    DECLARE_GLOBAL_VARIABLE(OPPONENT_SPIRAL_END_DEG),
    DECLARE_GLOBAL_VARIABLE(FISHEYE_SCALE),
    DECLARE_GLOBAL_VARIABLE(FISHEYE_FL),
    DECLARE_GLOBAL_VARIABLE(FISHEYE_Y),
    DECLARE_GLOBAL_VARIABLE(FISHEYE_ENABLE),
    DECLARE_GLOBAL_VARIABLE(WASD_ENABLED),
    DECLARE_GLOBAL_VARIABLE(LEAD_WITH_BAR),
    DECLARE_GLOBAL_VARIABLE(ODO_BLOB_ENABLED),
    DECLARE_GLOBAL_VARIABLE(ODO_HEUR_ENABLED),
    DECLARE_GLOBAL_VARIABLE(ODO_IMU_ENABLED),
    DECLARE_GLOBAL_VARIABLE(HEU_LEFTSTART_X),
    DECLARE_GLOBAL_VARIABLE(HEU_LEFTSTART_Y),
    DECLARE_GLOBAL_VARIABLE(HEU_RIGHTSTART_X),
    DECLARE_GLOBAL_VARIABLE(HEU_RIGHTSTART_Y),
    DECLARE_GLOBAL_VARIABLE(NN_MIN_CONFIDENCE),
    DECLARE_GLOBAL_VARIABLE(ANGLE_FUSE_CONF_THRESH),
    DECLARE_GLOBAL_VARIABLE(ANGLE_FUSE_SPEED),
    DECLARE_GLOBAL_VARIABLE(CAMERA_GAIN),
    DECLARE_GLOBAL_VARIABLE(IMAGE_REF_INTENSITY),
    DECLARE_GLOBAL_VARIABLE(IMAGE_INTENSITY_TIME_CONSTANT),
    DECLARE_GLOBAL_VARIABLE(IMAGE_START_BACKGROUND),
    DECLARE_GLOBAL_VARIABLE(IMAGE_INTENSITY_SQR_size),
    DECLARE_GLOBAL_VARIABLE(IMAGE_INTENSITY_SQR_1_x),
    DECLARE_GLOBAL_VARIABLE(IMAGE_INTENSITY_SQR_1_y),
    DECLARE_GLOBAL_VARIABLE(IMAGE_INTENSITY_SQR_2_x),
    DECLARE_GLOBAL_VARIABLE(IMAGE_INTENSITY_SQR_2_y),
    DECLARE_GLOBAL_VARIABLE(IMAGE_INTENSITY_SQR_3_x),
    DECLARE_GLOBAL_VARIABLE(IMAGE_INTENSITY_SQR_3_y),
    DECLARE_GLOBAL_VARIABLE(IMAGE_INTENSITY_SQR_4_x),
    DECLARE_GLOBAL_VARIABLE(IMAGE_INTENSITY_SQR_4_y),
    DECLARE_GLOBAL_VARIABLE(STARTING_LEFT_TL_x),
    DECLARE_GLOBAL_VARIABLE(STARTING_LEFT_TL_y),
    DECLARE_GLOBAL_VARIABLE(STARTING_LEFT_BR_x),
    DECLARE_GLOBAL_VARIABLE(STARTING_LEFT_BR_y),
    DECLARE_GLOBAL_VARIABLE(STARTING_RIGHT_TL_x),
    DECLARE_GLOBAL_VARIABLE(STARTING_RIGHT_TL_y),
    DECLARE_GLOBAL_VARIABLE(STARTING_RIGHT_BR_x),
    DECLARE_GLOBAL_VARIABLE(STARTING_RIGHT_BR_y)     


};

void saveGlobalVariablesToFile(const std::string& filename)
{
    std::ofstream file(filename);

    if (file.is_open())
    {
        for (const auto& variable : globalVariables)
        {
            file << variable.name << " = " << variable.saveFunc() << '\n';
        }

        file.close();
        std::cout << "Global variables saved to file: " << filename << std::endl;
    }
    else
    {
        std::cerr << "Unable to open file for writing: " << filename << std::endl;
    }
}

void loadGlobalVariablesFromFile(const std::string& filename)
{
    std::ifstream file(filename);

    if (file.is_open())
    {
        std::string line;

        while (std::getline(file, line))
        {
            std::istringstream iss(line);
            std::string variableName;
            std::string equalsSign;
            std::string variableValue;

            if (iss >> variableName >> equalsSign >> variableValue && equalsSign == "=")
            {
                for (auto& variable : globalVariables)
                {
                    if (variable.name == variableName)
                    {
                        variable.loadFunc(variableValue);
                        break;
                    }
                }
            }
        }

        file.close();
        std::cout << "Global variables loaded from file: " << filename << std::endl;
    }
    else
    {
        std::cerr << "Unable to open file for reading: " << filename << std::endl;
    }
}
